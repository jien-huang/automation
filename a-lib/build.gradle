/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'com.automation.java-library-conventions'
    id 'java-library'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
}

group = 'com.automationtest.lib'
version = '1.0'
sourceCompatibility = '11'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()

}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
    implementation 'com.google.code.gson:gson:2.8.6'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.3'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-beta-2'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    // https://mvnrepository.com/artifact/com.google.inject/guice
    implementation group: 'com.google.inject', name: 'guice', version: '4.2.3'

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task prepareKotlinBuildScriptModel {

}
